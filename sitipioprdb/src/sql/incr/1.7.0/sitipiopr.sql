set define off;

ALTER TABLE QGIS_T_PARTICELLA_LAVORAZIONE ADD 
    ( 
     FLAG_PARTICELLA_CONDUZIONE VARCHAR2 (1) DEFAULT 'S'  NOT NULL 
    ) 
;


ALTER TABLE QGIS_T_PARTICELLA_LAVORAZIONE 
    ADD 
        CONSTRAINT CK_FLAG_13 CHECK (FLAG_PARTICELLA_CONDUZIONE IN ('N', 'S')) 
;

CREATE OR REPLACE TYPE OBJ_PARTICELLA_GEOMETRIA AS object(
ID_PARTICELLA NUMBER,
SHAPE SDO_GEOMETRY);
/

CREATE OR REPLACE TYPE LIST_PARTICELLA_GEOMETRIA AS TABLE OF OBJ_PARTICELLA_GEOMETRIA;
/

ALTER TABLE QGIS_T_LAVORAZ_BYPASS ADD 
    ( 
     FLAG_DIFF_PART_SUOLI VARCHAR2 (1) DEFAULT 'N'  NOT NULL 
    ) 
;


ALTER TABLE QGIS_T_LAVORAZ_BYPASS 
    ADD 
        CONSTRAINT CK_FLAG_14 CHECK (FLAG_DIFF_PART_SUOLI IN ('N', 'S')) 
;

CREATE INDEX IE3_QGIS_T_PARTICELLA_LAVORAZI ON QGIS_T_PARTICELLA_LAVORAZIONE
(EXT_COD_NAZIONALE)
TABLESPACE SITIPIOPR_IDX;

CREATE TABLE QGIS_T_REGISTRO_PARTICELLE 
    ( 
     ID_REGISTRO_PARTICELLE NUMBER (10)  NOT NULL , 
     EXT_COD_NAZIONALE      VARCHAR2 (4)  NOT NULL , 
     FOGLIO                 NUMBER (4)  NOT NULL , 
     CAMPAGNA               NUMBER (4)  NOT NULL , 
     ID_VERSIONE_PARTICELLA NUMBER (10)  NOT NULL , 
     DATA_INIZIO_VALIDITA   DATE  NOT NULL , 
     DATA_FINE_VALIDITA     DATE 
    ) 
TABLESPACE SITIPIOPR_TBL;


ALTER TABLE QGIS_T_REGISTRO_PARTICELLE 
    ADD CONSTRAINT PK_QGIS_T_REGISTRO_PARTICELLE PRIMARY KEY ( ID_REGISTRO_PARTICELLE  ) USING INDEX TABLESPACE SITIPIOPR_IDX;

CREATE SEQUENCE SEQ_QGIS_T_REGISTRO_PARTICELLE 
START WITH 1 
    NOCACHE ;


ALTER TABLE QGIS_T_REGISTRO_PARTICELLE 
    ADD CONSTRAINT FK_QGIS_T_VERSIONE_PARTICEL_05 FOREIGN KEY 
    ( 
     ID_VERSIONE_PARTICELLA
    ) 
    REFERENCES QGIS_T_VERSIONE_PARTICELLA 
    ( 
     ID_VERSIONE_PARTICELLA
    );

CREATE TABLE QGIS_T_REGISTRO_SUOLI 
    ( 
     ID_REGISTRO_SUOLI    NUMBER (10)  NOT NULL , 
     EXT_COD_NAZIONALE    VARCHAR2 (4)  NOT NULL , 
     FOGLIO               NUMBER (4)  NOT NULL , 
     CAMPAGNA             NUMBER (4)  NOT NULL , 
     ID_SUOLO_RILEVATO    NUMBER (10)  NOT NULL , 
     DATA_INIZIO_VALIDITA DATE  NOT NULL , 
     DATA_FINE_VALIDITA   DATE 
    ) 
TABLESPACE SITIPIOPR_TBL;


ALTER TABLE QGIS_T_REGISTRO_SUOLI 
    ADD CONSTRAINT PK_QGIS_T_REGISTRO_SUOLI PRIMARY KEY ( ID_REGISTRO_SUOLI  ) USING INDEX TABLESPACE SITIPIOPR_IDX;

CREATE SEQUENCE SEQ_QGIS_T_REGISTRO_SUOLI 
START WITH 1 
    NOCACHE ;

ALTER TABLE QGIS_T_REGISTRO_SUOLI 
    ADD CONSTRAINT FK_QGIS_T_SUOLO_RILEVATO_03 FOREIGN KEY 
    ( 
     ID_SUOLO_RILEVATO
    ) 
    REFERENCES QGIS_T_SUOLO_RILEVATO 
    ( 
     ID_SUOLO_RILEVATO
    );

CREATE TABLE QGIS_T_REFRESH_ESTESO 
    ( 
     ID_REFRESH_ESTESO NUMBER (10)  NOT NULL , 
     CAMPAGNA          NUMBER (4)  NOT NULL , 
     SHAPE             SDO_GEOMETRY  NOT NULL , 
     COD_VARIETA       NUMBER (3)  NOT NULL 
    ) 
COLUMN SHAPE NOT SUBSTITUTABLE AT ALL LEVELS
VARRAY "SHAPE"."SDO_ELEM_INFO" STORE AS LOB (tablespace SITIPIOPR_lob)
VARRAY "SHAPE"."SDO_ORDINATES" STORE AS LOB (tablespace SITIPIOPR_lob)
TABLESPACE SITIPIOPR_TBL;


ALTER TABLE QGIS_T_REFRESH_ESTESO 
    ADD CONSTRAINT PK_QGIS_T_REFRESH_ESTESO PRIMARY KEY ( ID_REFRESH_ESTESO  ) USING INDEX TABLESPACE SITIPIOPR_IDX;

CREATE SEQUENCE SEQ_QGIS_T_REFRESH_ESTESO 
START WITH 1 
    NOCACHE ;

INSERT INTO USER_SDO_GEOM_METADATA(TABLE_NAME, COLUMN_NAME, DIMINFO, SRID)
VALUES(
	'QGIS_T_REFRESH_ESTESO', 
	'SHAPE',
	SDO_DIM_ARRAY(
		SDO_DIM_ELEMENT ('X', 1310000, 2820000, 0.005),
		SDO_DIM_ELEMENT ('Y', 3930000, 5220000, 0.005)
	),
	NULL
);

commit;

CREATE INDEX IE1_QGIS_T_REFRESH_ESTESO ON QGIS_T_REFRESH_ESTESO(SHAPE)
   INDEXTYPE IS MDSYS.SPATIAL_INDEX PARALLEL
   PARAMETERS('tablespace=SITIPIOPR_IDX');
   

CREATE TABLE QGIS_T_REFRESH_VARIATO 
    ( 
     ID_REFRESH_VARIATO NUMBER (10)  NOT NULL , 
     CAMPAGNA           NUMBER (4)  NOT NULL , 
     SHAPE              SDO_GEOMETRY  NOT NULL , 
     COD_VARIETA        NUMBER (3)  NOT NULL 
    ) 
COLUMN SHAPE NOT SUBSTITUTABLE AT ALL LEVELS
VARRAY "SHAPE"."SDO_ELEM_INFO" STORE AS LOB (tablespace SITIPIOPR_lob)
VARRAY "SHAPE"."SDO_ORDINATES" STORE AS LOB (tablespace SITIPIOPR_lob)
TABLESPACE SITIPIOPR_TBL;


ALTER TABLE QGIS_T_REFRESH_VARIATO 
    ADD CONSTRAINT PK_QGIS_T_REFRESH_VARIATO PRIMARY KEY ( ID_REFRESH_VARIATO  ) USING INDEX TABLESPACE SITIPIOPR_IDX;

CREATE SEQUENCE SEQ_QGIS_T_REFRESH_VARIATO 
START WITH 1 
    NOCACHE ;
	
INSERT INTO USER_SDO_GEOM_METADATA(TABLE_NAME, COLUMN_NAME, DIMINFO, SRID)
VALUES(
	'QGIS_T_REFRESH_VARIATO', 
	'SHAPE',
	SDO_DIM_ARRAY(
		SDO_DIM_ELEMENT ('X', 1310000, 2820000, 0.005),
		SDO_DIM_ELEMENT ('Y', 3930000, 5220000, 0.005)
	),
	NULL
);

commit;

CREATE INDEX IE1_QGIS_T_REFRESH_VARIATO ON QGIS_T_REFRESH_VARIATO(SHAPE)
   INDEXTYPE IS MDSYS.SPATIAL_INDEX PARALLEL
   PARAMETERS('tablespace=SITIPIOPR_IDX');
   
CREATE TABLE QGIS_T_REGISTRO_PRATI_PERM 
    ( 
     ID_REGISTRO_PRATI_PERM NUMBER (10)  NOT NULL , 
     CAMPAGNA               NUMBER (4)  NOT NULL , 
     SHAPE                  SDO_GEOMETRY  NOT NULL 
    ) 
COLUMN SHAPE NOT SUBSTITUTABLE AT ALL LEVELS
VARRAY "SHAPE"."SDO_ELEM_INFO" STORE AS LOB (tablespace SITIPIOPR_lob)
VARRAY "SHAPE"."SDO_ORDINATES" STORE AS LOB (tablespace SITIPIOPR_lob)
TABLESPACE SITIPIOPR_TBL;


ALTER TABLE QGIS_T_REGISTRO_PRATI_PERM 
    ADD CONSTRAINT PK_QGIS_T_REGISTRO_PRATI_PERM PRIMARY KEY ( ID_REGISTRO_PRATI_PERM  ) USING INDEX TABLESPACE SITIPIOPR_IDX;

CREATE SEQUENCE SEQ_QGIS_T_REGISTRO_PRATI_PERM 
START WITH 1 
    NOCACHE ;
	
INSERT INTO USER_SDO_GEOM_METADATA(TABLE_NAME, COLUMN_NAME, DIMINFO, SRID)
VALUES(
	'QGIS_T_REGISTRO_PRATI_PERM', 
	'SHAPE',
	SDO_DIM_ARRAY(
		SDO_DIM_ELEMENT ('X', 1310000, 2820000, 0.005),
		SDO_DIM_ELEMENT ('Y', 3930000, 5220000, 0.005)
	),
	NULL
);

commit;

CREATE INDEX IE1_QGIS_T_REGISTRO_PRATI_PERM ON QGIS_T_REGISTRO_PRATI_PERM(SHAPE)
   INDEXTYPE IS MDSYS.SPATIAL_INDEX PARALLEL
   PARAMETERS('tablespace=SITIPIOPR_IDX');

-- Script grants
declare
  
  Procedure CreateGrantToUser is
  TYPE tpUser IS RECORD (nomeUser  VARCHAR2(30),
  	   		   		     Comando   VARCHAR2(300));
						   
  TYPE typTbUser IS TABLE OF tpUser INDEX BY BINARY_INTEGER;						   
  
  tUser    typTbUser;
  
  begin
    tUser(1).nomeUser := 'SITIPIOPR_RW';
    tUser(1).comando  := 'grant select,insert, update, delete on ';
	
	FOR i IN tUser.FIRST..tUser.LAST LOOP
	--grant sulle tabelle
    for c in ( 
       select tUser(i).comando||tb.table_name||' to '||tUser(i).nomeUser cmd from user_tables tb where tb.table_name != 'DBG_GATE_CALLS'
    ) loop
      execute immediate c.cmd;
    end loop;

    -- Grant sulle sequence
    for c in ( 
       select 'grant select,alter on '||se.sequence_name||' to '||tUser(i).nomeUser cmd from user_sequences se
    ) loop 
      execute immediate c.cmd;
    end loop;

    -- Grant su Procedure/Funzioni/Package
    for c in ( 
       select distinct 'grant execute on '||pr.object_name||' to '||tUser(i).nomeUser cmd from user_procedures pr 
    ) loop
      execute immediate c.cmd;
    end loop;
	
	-- Grant su types
    for c in ( 
       select distinct 'grant execute on '||pr.type_name||' to '||tUser(i).nomeUser cmd from user_types pr where instr(pr.type_name,'SYS') = 0 
    ) loop
      execute immediate c.cmd;
    end loop;
	
	-- Grant su viste
    for c in ( 
       select distinct 'grant select on '||vi.view_name||' to '||tUser(i).nomeUser cmd from user_views vi 
    ) loop
      execute immediate c.cmd;
    end loop;
    
    end loop;
  end;                           
begin
  CreateGrantToUser;
end;
/


	

